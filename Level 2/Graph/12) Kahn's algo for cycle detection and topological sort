class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        int[] tsort = new int[V];
        int[] in = new int[V];
        
        for (int i = 0; i < V; i++) {
            for (int j : adj.get(i)) {
                in[j]++;
            }
        }
        
        ArrayDeque<Integer> que = new ArrayDeque<>();
        for (int i = 0; i < V; i++) {
            if (in[i] == 0) {
                que.add(i);
            }
        }
        
        int idx = 0;
        while (que.size() > 0) {
            int rem = que.remove();
            tsort[idx] = rem;
            idx++;
            
            for (int i : adj.get(rem)) {
                in[i]--;
                
                if (in[i] == 0) {
                    que.add(i);
                }
            }
        }
        
        if (tsort.length < V) {
            return new int[] {};
        }
        
        return tsort;
    }
}
