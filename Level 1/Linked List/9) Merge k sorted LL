/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int min(ListNode[] lists) {
        int min = Integer.MAX_VALUE;
        int idx = -1;
        
        for (int i = 0; i < lists.length; i++) {
            if (lists[i] != null && lists[i].val < min) {
                min = lists[i].val;
                idx = i;
            }
        }
        
        return idx;
    }
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode dummy = new ListNode(-1);
        ListNode tail = dummy;
        
        while (true) {
            int min = min(lists);
            if (min == -1) {
                break;
            }
            
            tail.next = lists[min];
            lists[min] = lists[min].next;
            tail = tail.next;
        }
        return dummy.next;
    }
}
