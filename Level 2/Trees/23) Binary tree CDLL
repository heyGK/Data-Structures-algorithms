class Solution
{ 
    //Function to convert binary tree into circular doubly linked list.
    Node bTreeToClist(Node root)
    {
        //your code here
        Node ans = helper(root);
        
        return ans;
    }
    
    Node helper(Node root) {
        if (root == null) {
            return null;
        }
        
        Node left = helper(root.left);
        Node right = helper(root.right);
        
        Node r = root;
        r.left = r.right = r;
        
        Node firstcon = concat(left, r);
        Node finalcon = concat(firstcon, right);
        
        return finalcon;
    }
    
    Node concat(Node h1, Node h2) {
        if (h1 == null) {
            return h2;
        }
        else if (h2 == null) {
            return h1;
        }
        
        Node t1 = h1.left;
        Node t2 = h2.left;
        
        t1.right = h2;
        h2.left = t1;
        
        t2.right = h1;
        h1.left = t2;
        
        return h1;
    }
}
