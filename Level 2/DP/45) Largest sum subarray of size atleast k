class Compute {
    
    public long maxSumWithK(long a[], long n, long k)
    {
        long[] res = new long[a.length];
        long currSum = a[0];
        res[0] = currSum;
        for (int i = 1; i < a.length; i++) {
            if (currSum < 0) {
                currSum = a[i];
            }
            else {
                currSum += a[i];
            }
            res[i] = currSum;
        }
        
        long[] win = new long[(int)n - (int)k + 1];
        for (int i = 0; i < k; i++) {
            win[0] += a[i];
        }
        
        for (int i = 1; i < win.length; i++) {
            win[i] = win[i - 1] - a[i - 1] + a[i + (int)k - 1];
        }
        
        
        long ans = 0 + win[0];
        for (int i = 0; i < win.length - 1; i++) {
            ans = Math.max(ans, Math.max(win[i + 1], win[i + 1] + res[i]));
        }
        
        return ans;
    }
}
