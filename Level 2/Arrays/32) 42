class Solution {
    public int trap(int[] height) {
        int[] rMax = new int[height.length];
        int[] lMax = new int[height.length];
        
        int max = height[0];
        for (int i = 1; i < lMax.length; i++) {
            lMax[i] = max;
            max = Math.max(max, height[i]);
        }
        
        max = height[height.length - 1];
        for (int i = height.length - 2; i >= 0; i--) {
            rMax[i] = max;
            max = Math.max(max, height[i]);
        }
        
        int res = 0;
        for (int i = 0; i < height.length; i++) {
            if (Math.min(lMax[i], rMax[i]) - height[i] > 0) {
                int length = Math.min(lMax[i], rMax[i]) - height[i];
                
                res += length;
            }
        }
        
        return res;
    }
}
