class Solution {
    public boolean isBipartite(int[][] graph) {
        int[] visited = new int[graph.length];
        for (int i = 0; i < graph.length; i++) {
            if (visited[i] == 0) {
                if(!dfs(graph, visited, i, 1)) return false;
            }
       }

       return true;
    }

    public boolean dfs(int[][] graph, int[] visited, int src, int color) {
        visited[src] = color;
        for (int n : graph[src]) {
            if (visited[n] == 0) {
                if(dfs(graph, visited, n, color * (-1)) == false) {
                    return false;
                }
            }
            else if (visited[n] == color) {
                return false;
            }
        }

        return true;
    }
}
