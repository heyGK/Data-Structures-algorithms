class Solution {
    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {
        int[] dist = new int[n];
        Arrays.fill(dist, Integer.MAX_VALUE);
        dist[src] = 0;
        
        int[] distP1 = null;
        
        for (int i = 1; i <= k + 1; i++) {
            distP1 = dist.clone();
            for (int[] flight : flights) {
                int u = flight[0];
                int v = flight[1];
                int uv = flight[2];
                
                if (dist[u] != Integer.MAX_VALUE) {
                    distP1[v] = Math.min(distP1[v], dist[u] + uv);
                }
            }
            dist = distP1;
        }
        
        if (dist[dst] == Integer.MAX_VALUE) {
            return -1;
        }
        else {
            return dist[dst];
        }
    }
}
