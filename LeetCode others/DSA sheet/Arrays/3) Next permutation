class Solution {
    public void nextPermutation(int[] nums) {
        if (nums.length == 1) {
            return;
        }

        int idx = -1;
        for (int i = nums.length - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                idx = i;
                break;
            }
        }

        if (idx >= 0) {
            for (int i = nums.length - 1; i >= 0; i--) {
                if (nums[idx] < nums[i]) {
                    swap(idx, i, nums);
                    break;
                }
            }
        }

        reverse(nums, idx + 1, nums.length - 1);
    }

    public void swap(int i, int j, int[] nums) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    public void reverse(int[] nums, int i, int j) {
        while (i <= j) {
            swap(i, j, nums);
            i++;
            j--;
        }
    }
}
