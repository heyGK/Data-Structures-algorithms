class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int lo = 1;
        int hi = 0;
        
        for (int i = 0; i < piles.length; i++) {
            hi = Math.max(hi, piles[i]);
        }
        
        while (lo < hi) {
            int mid = (lo + hi) / 2;   
            
            int totalTime = 0;
            for (int i = 0; i < piles.length; i++) {
                int time = (int)Math.ceil((double)piles[i] / mid);
                totalTime += time;
            }
            
            if (totalTime > h) {
                lo = mid + 1;
            }
            else {
                hi = mid;
            }
        }
        
        return lo;
    }
}
