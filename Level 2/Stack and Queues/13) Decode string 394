class Solution {
    public String decodeString(String s) {
        Stack<String> stk = new Stack<>();
        Stack<Integer> count = new Stack<>();
        StringBuilder word = new StringBuilder();
        int num = 0;
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            if (Character.isDigit(ch)) {
                num = num * 10 + (ch - '0');
            }
            else if (ch == '[') {
                stk.push(word.toString());
                count.push(num);
                
                word = new StringBuilder();
                num = 0;
            }
            else if (ch == ']') {
                int count1 = count.pop();
                StringBuilder dup = new StringBuilder(stk.pop());
                for (int j = 0; j < count1; j++) dup.append(word);
                word = dup;
            }
            else {
                word.append(ch);
            }
        }
        
        return word.toString();
    }
}
