public class Solution {
    public int findMedian(int[][] A) {
        int low = 0;
        int high = Integer.MAX_VALUE;
        int n = A.length;
        int m = A[0].length;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            int count = 0;
            for (int i = 0; i < A.length; i++) {
                count += countSmallerOrEqual(A[i], mid);
            }
            
            if (count <= (n * m) / 2) {
                low = mid + 1;
            }
            else {
                high = mid - 1;
            }
        }
        
        return low - 1;
    }
    
    public int countSmallerOrEqual(int[] A, int a) {
        int low = 0;
        int high = A.length - 1;
        int size = 0;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if (A[mid] < a) {
                low = mid + 1;
                size = mid + 1;
            }
            else {
                high = mid - 1;
            }
        }
        
        return size;
    }
}
