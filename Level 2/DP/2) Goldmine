class Solution{
    static int maxGold(int n, int m, int M[][])
    {
        // code here
        int[][] strg = new int[n][m];
        for (int j = m - 1; j >= 0; j--) {
            for (int i = 0; i < n; i++) {
                if (j == m - 1) {
                    strg[i][j] = M[i][j];
                }
                else if (i == 0 && n == 1) {
                    strg[i][j] = M[i][j] + strg[i][j + 1];
                }
                else if (i == 0) {
                    strg[i][j] = Math.max(strg[i][j + 1], strg[i + 1][j + 1]) + M[i][j];
                }
                else if (i == n - 1) {
                    strg[i][j] = Math.max(strg[i][j + 1], strg[i - 1][j + 1]) + M[i][j];
                }
                else {
                    if (i + 1 >= 0 && j + 1 < m && i + 1 < n) {
                        strg[i][j] = Math.max(strg[i][j + 1], Math.max(strg[i + 1][j + 1], strg[i - 1][j + 1])) + M[i][j];
                    }
                }
            }      
        }
        
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            max = Math.max(max, strg[i][0]);
        }
        
        return max;
    }
}
