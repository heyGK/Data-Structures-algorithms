public static boolean areMirror(Node n1, Node n2) {
    // write your code here
    if (n1 == null && n2 == null) {
      return true;
    }
    if (n1 == null) {
      return false;
    }
    if (n2 == null) {
      return false;
    }

    if (n1.children.size() != n2.children.size()) {
      return false;
    }
    for (int i = 0; i < n1.children.size(); i++) {
      int j = n1.children.size() - 1 - i;
      if (areMirror(n1.children.get(i), n2.children.get(j)) == false) {
        return false;
      }
    }
    return true;
  }

  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    int n1 = Integer.parseInt(br.readLine());
    int[] arr1 = new int[n1];
    String[] values1 = br.readLine().split(" ");
    for (int i = 0; i < n1; i++) {
      arr1[i] = Integer.parseInt(values1[i]);
    }
    Node root1 = construct(arr1);

    int n2 = Integer.parseInt(br.readLine());
    int[] arr2 = new int[n2];
    String[] values2 = br.readLine().split(" ");
    for (int i = 0; i < n2; i++) {
      arr2[i] = Integer.parseInt(values2[i]);
    }
    Node root2 = construct(arr2);

    boolean mirror = areMirror(root1, root2);
    System.out.println(mirror);
  }
