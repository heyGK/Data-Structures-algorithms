------------MEMOIZATION----------
class Solution {
    public int climbStairs(int n) {
        int[] strg = new int[n + 1];
        return climbStairsMem(n, strg);
    }
    
    public int climbStairsTab(int n, int[] strg) {
        if (n == 0 || n == 1) {
            return strg[n] = 1;
        }
        
        if (strg[n] != 0) {
            return strg[n];
        }
        
        int path1 = climbStairsMem(n - 1, strg);
        int path2 = climbStairsMem(n - 2, strg);
        
        return strg[n] = path1 + path2;
    }
}

---------TABULATION----------
class Solution {
    public int climbStairs(int n) {
        int[] strg = new int[n + 1];
        strg[0] = 1;
        for (int i = 1; i <= n; i++) {
            if (i == 1) {
                strg[i] = strg[i - 1];
            }
            else {
                strg[i] = strg[i - 1] + strg[i - 2];
            }
        }
        
        return strg[n];
    }
}
